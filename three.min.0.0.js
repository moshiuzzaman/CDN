function init(){function e(){const e=this.files;u=e[0]}function n(){h=this.value}var t=document.getElementById("myCanvasElement");scene=new THREE.Scene,scene.background=new THREE.Color(controllerValue.bgColor?controllerValue.bgColor[0]:controllerValue.defaultbg?controllerValue.defaultbg:"skyblue"),renderer=new THREE.WebGLRenderer({antialias:!0,canvas:t,preserveDrawingBuffer:!0}),renderer.setPixelRatio(window.devicePixelRatio);const o=renderer.domElement,l=o.clientWidth,i=o.clientHeight;camera=new THREE.PerspectiveCamera(45,window.innerWidth/window.innerHeight,1,1e3),camera.lookAt(scene.position),camera.position.set(0,0,25),o.width===l&&o.height===i||(renderer.setSize(l,i,!1),camera.aspect=l/i,camera.updateProjectionMatrix());let a=new THREE.HemisphereLight(16777147,526368,.8);scene.add(a);let r=new THREE.DirectionalLight(16777215,.7);r.position.set(3,-8,1.5),scene.add(r);let c=new THREE.DirectionalLight(16777215,.5);c.position.set(7,8,0),scene.add(c);let s=new THREE.DirectionalLight(16777215,.5);s.position.set(-7,8,0),scene.add(s);let d,u=null;const m=new FBXLoader,b=new GLTFLoader,g=new OBJLoader;if(controllerValue.assetLink){let e=controllerValue.assetLink.split("."),n=e[e.length-1];if("fbx"===n)scene.remove(obj),m.load(controllerValue.assetLink,function(e){obj=e;var n=(new THREE.Box3).setFromObject(obj),t=n.getSize(new THREE.Vector3),o=Math.max(t.x,t.y,t.z);isNaN(o)?obj.scale.set(.02,.02,.02):obj.scale.multiplyScalar(10/o);const l=new THREE.Vector3;if(n.getCenter(l).negate(),obj.children.forEach(e=>{e.children.length===obj.children.length&&e.position.set(l.x,l.y,l.z)}),obj.animations.length){mixer=new THREE.AnimationMixer(obj);const e=mixer.clipAction(obj.animations[0]);e.play(),obj.castShadow=!0}scene.add(obj)});else if("glb"===n||"gltf"===n){scene.remove(obj);const e=new DRACOLoader;e.setDecoderConfig({type:"js"}),e.setDecoderPath("https://raw.githubusercontent.com/mrdoob/three.js/dev/examples/js/libs/draco/"),b.setDRACOLoader(e),b.load(controllerValue.assetLink,function(e){obj=e.scene;var n=(new THREE.Box3).setFromObject(obj),t=n.getSize(new THREE.Vector3),o=Math.max(t.x,t.y,t.z);isNaN(o)?obj.scale.set(.02,.02,.02):obj.scale.multiplyScalar(10/o);const l=new THREE.Vector3;n.getCenter(l).negate(),obj.children.forEach(e=>{e.children.length===obj.children.length&&e.position.set(l.x,l.y,l.z)}),e.animations.length&&(mixer=new THREE.AnimationMixer(e.scene),mixer.clipAction(e.animations[0]).play()),scene.add(obj)})}else"obj"===n&&(scene.remove(obj),g.load(controllerValue.assetLink,function(e){obj=e;var n=(new THREE.Box3).setFromObject(obj),t=n.getSize(new THREE.Vector3),o=Math.max(t.x,t.y,t.z);isNaN(o)?obj.scale.set(.02,.02,.02):obj.scale.multiplyScalar(10/o);const l=new THREE.Vector3;if(n.getCenter(l).negate(),obj.children.forEach(e=>{e.children.length===obj.children.length&&e.position.set(l.x,l.y,l.z)}),obj.animations.length){mixer=new THREE.AnimationMixer(obj);const e=mixer.clipAction(obj.animations[0]);e.play(),obj.castShadow=!0}scene.add(obj)}))}else m.load("asset/fire.fbx",function(e){obj=e;var n=(new THREE.Box3).setFromObject(obj),t=n.getSize(new THREE.Vector3),o=Math.max(t.x,t.y,t.z);obj.scale.multiplyScalar(6/o),scene.add(obj)});const p=document.getElementById("fileInput");let h;p.addEventListener("change",e,!1),document.getElementById("fileUploadBtn").addEventListener("click",()=>{d=URL.createObjectURL(u);let e=u.name.split("."),n=e[e.length-1];if("fbx"===n)scene.remove(obj),m.load(d,function(e){obj=e;var n=(new THREE.Box3).setFromObject(obj),t=n.getSize(new THREE.Vector3),o=Math.max(t.x,t.y,t.z);let l=.5;isNaN(o)?(obj.scale.set(.02,.02,.02),l=.1):obj.scale.multiplyScalar(10/o);const i=new THREE.Vector3;n.getCenter(i).negate();for(let e of obj.children){if(e.children.length===obj.children.length){e.position.set(i.x,i.y,i.z);break}obj.position.y-=l}if(obj.animations.length){mixer=new THREE.AnimationMixer(obj);for(let e=0;e<obj.animations.length;e++)mixer.clipAction(obj.animations[0]).play();obj.castShadow=!0}scene.add(obj)});else if("glb"===n||"gltf"===n){const e=new DRACOLoader;e.setDecoderConfig({type:"js"}),e.setDecoderPath("https://raw.githubusercontent.com/mrdoob/three.js/dev/examples/js/libs/draco/"),b.setDRACOLoader(e),scene.remove(obj),b.load(d,function(e){obj=e.scene;var n=(new THREE.Box3).setFromObject(obj),t=n.getSize(new THREE.Vector3),o=Math.max(t.x,t.y,t.z);isNaN(o)?obj.scale.set(.02,.02,.02):obj.scale.multiplyScalar(10/o);const l=new THREE.Vector3;n.getCenter(l).negate(),obj.children.forEach(e=>{e.children.length===obj.children.length&&e.position.set(l.x,l.y,l.z)}),e.animations.length&&(mixer=new THREE.AnimationMixer(e.scene),mixer.clipAction(e.animations[0]).play()),scene.add(obj)})}else"obj"===n&&(scene.remove(obj),g.load(d,function(e){obj=e;var n=(new THREE.Box3).setFromObject(obj),t=n.getSize(new THREE.Vector3),o=Math.max(t.x,t.y,t.z);isNaN(o)?obj.scale.set(.02,.02,.02):obj.scale.multiplyScalar(10/o);const l=new THREE.Vector3;if(n.getCenter(l).negate(),obj.children.forEach(e=>{e.children.length===obj.children.length&&e.position.set(l.x,l.y,l.z)}),obj.animations.length){mixer=new THREE.AnimationMixer(obj);const e=mixer.clipAction(obj.animations[0]);e.play(),obj.castShadow=!0}scene.add(obj)}))});const x=document.getElementById("urlInput");x.addEventListener("change",n,!1),document.getElementById("urlUploadBtn").addEventListener("click",()=>{d=h;let e=h.split("."),n=e[e.length-1];if("fbx"===n)scene.remove(obj),m.load(d,function(e){obj=e;var n=(new THREE.Box3).setFromObject(obj),t=n.getSize(new THREE.Vector3),o=Math.max(t.x,t.y,t.z);isNaN(o)?obj.scale.set(.02,.02,.02):obj.scale.multiplyScalar(10/o);const l=new THREE.Vector3;if(n.getCenter(l).negate(),obj.children.forEach(e=>{e.children.length===obj.children.length&&e.position.set(l.x,l.y,l.z)}),obj.animations.length){mixer=new THREE.AnimationMixer(obj);const e=mixer.clipAction(obj.animations[0]);e.play(),obj.castShadow=!0}scene.add(obj)});else if("glb"===n||"gltf"===n){scene.remove(obj);const e=new DRACOLoader;e.setDecoderConfig({type:"js"}),e.setDecoderPath("https://raw.githubusercontent.com/mrdoob/three.js/dev/examples/js/libs/draco/"),b.setDRACOLoader(e),b.load(d,function(e){obj=e.scene;var n=(new THREE.Box3).setFromObject(obj),t=n.getSize(new THREE.Vector3),o=Math.max(t.x,t.y,t.z);isNaN(o)?obj.scale.set(.02,.02,.02):obj.scale.multiplyScalar(10/o);const l=new THREE.Vector3;n.getCenter(l).negate(),obj.children.forEach(e=>{e.children.length===obj.children.length&&e.position.set(l.x,l.y,l.z)}),e.animations.length&&(mixer=new THREE.AnimationMixer(e.scene),mixer.clipAction(e.animations[0]).play()),scene.add(obj)})}else"obj"===n&&(scene.remove(obj),g.load(d,function(e){obj=e;var n=(new THREE.Box3).setFromObject(obj),t=n.getSize(new THREE.Vector3),o=Math.max(t.x,t.y,t.z);isNaN(o)?obj.scale.set(.02,.02,.02):obj.scale.multiplyScalar(10/o);const l=new THREE.Vector3;if(n.getCenter(l).negate(),obj.children.forEach(e=>{e.children.length===obj.children.length&&e.position.set(l.x,l.y,l.z)}),obj.animations.length){mixer=new THREE.AnimationMixer(obj);const e=mixer.clipAction(obj.animations[0]);e.play(),obj.castShadow=!0}scene.add(obj)}))}),controls=new OrbitControls(camera,renderer.domElement),controls.target.set(0,0,0),controls.autoRotate=!0,controls.screenSpacePanning=!1,controls.update(),renderer.setAnimationLoop(render),window.addEventListener("resize",onWindowResize)}function onWindowResize(){const e=renderer.domElement,n=e.clientWidth,t=e.clientHeight;camera.aspect=n/t,camera.updateProjectionMatrix(),renderer.setSize(n,t,!1),render()}function render(){controls.autoRotateSpeed!==rotation&&(controls.autoRotateSpeed=rotation),controls.minDistance!==zoomMin&&(controls.minDistance=zoomMin),controls.maxDistance!==zoomMax&&(controls.maxDistance=zoomMax),controls.minPolarAngle!==minAngleForOrbit&&(controls.minPolarAngle=minAngleForOrbit),controls.maxPolarAngle!==maxAngleForOrbit&&(controls.maxPolarAngle=maxAngleForOrbit),mixer&&mixer.update(clock.getDelta()),controls.update(),renderer.render(scene,camera)}let controllerValue;controllerValue="object"==typeof mainControllerValue?mainControllerValue:{assetLink:"https://threejsfundamentals.org/threejs/resources/models/cartoon_lowpoly_small_city_free_pack/scene.gltf",controllerNonVisibility:!1,rotation:10,maxAngleForOrbit:3.4,minAngleForOrbit:0,zoomMax:50,zoomMin:10,defaultbg:"green",bgColor:["skyblue","#D14250","#8B9298","#3888FD","#198754","#FFC107"],bgTexrute:[{texture_ft:"https://raw.githubusercontent.com/Siam456/FT_Filees/main/backgroundTexture/tropic_ft.jpg",texture_bk:"https://raw.githubusercontent.com/Siam456/FT_Filees/main/backgroundTexture/tropic_bk.jpg",texture_up:"https://raw.githubusercontent.com/Siam456/FT_Filees/main/backgroundTexture/tropic_up.jpg",texture_dn:"https://raw.githubusercontent.com/Siam456/FT_Filees/main/backgroundTexture/tropic_dn.jpg",texture_rt:"https://raw.githubusercontent.com/Siam456/FT_Filees/main/backgroundTexture/tropic_rt.jpg",texture_lf:"https://raw.githubusercontent.com/Siam456/FT_Filees/main/backgroundTexture/tropic_lf.jpg"},{texture_ft:"https://raw.githubusercontent.com/Siam456/FT_Filees/main/backgroundTexture/arid2_ft.jpg",texture_bk:"https://raw.githubusercontent.com/Siam456/FT_Filees/main/backgroundTexture/arid2_bk.jpg",texture_up:"https://raw.githubusercontent.com/Siam456/FT_Filees/main/backgroundTexture/arid2_up.jpg",texture_dn:"https://raw.githubusercontent.com/Siam456/FT_Filees/main/backgroundTexture/arid2_dn.jpg",texture_rt:"https://raw.githubusercontent.com/Siam456/FT_Filees/main/backgroundTexture/arid2_rt.jpg",texture_lf:"https://raw.githubusercontent.com/Siam456/FT_Filees/main/backgroundTexture/arid2_lf.jpg"},{texture_ft:"https://raw.githubusercontent.com/Siam456/FT_Filees/main/backgroundTexture/zeus_ft.jpg",texture_bk:"https://raw.githubusercontent.com/Siam456/FT_Filees/main/backgroundTexture/zeus_bk.jpg",texture_up:"https://raw.githubusercontent.com/Siam456/FT_Filees/main/backgroundTexture/zeus_up.jpg",texture_dn:"https://raw.githubusercontent.com/Siam456/FT_Filees/main/backgroundTexture/zeus_dn.jpg",texture_rt:"https://raw.githubusercontent.com/Siam456/FT_Filees/main/backgroundTexture/zeus_rt.jpg",texture_lf:"https://raw.githubusercontent.com/Siam456/FT_Filees/main/backgroundTexture/zeus_lf.jpg"}],htmlRotationSpeedMin:-50,htmlRotationSpeedMax:50,htmlRotationSpeedStep:5,htmlRotationSpeedDefaultValue:10,htmlRotationtopLimiteMin:1.6,htmlRotationtopLimiteMax:3.2,htmlRotationBottonLimiteMin:0,htmlRotationBottonLimiteMax:1.6,htmlRotationLimiteStep:.2,htmlRotationtopLimiteDefaultValue:3.1,htmlRotationBottonLimiteDefaultValue:0,htmlZoomInMin:-10,htmlZoomInMax:10,htmlZoomOutMin:50,htmlZoomOutMax:90,zoomStape:2,htmlZoomInDefaultValue:10,htmlZoomOutDefaultValue:50},document.getElementById("bs__root").innerHTML=`\n<div class="container">\n        <div class="heading">\n            <h1>3D Viewer</h1>\n\n        </div>\n        <div class="wrapper" id="wrapperId">\n            <div class="canvasWrapper">\n                <div class="actionButton">\n                    <button id="fullscreen"><img height="15px"\n                            src="https://img.icons8.com/ios-glyphs/30/000000/full-screen--v1.png" /></button>\n                    <button id="snapshot"><img height="15px"\n                            src="https://img.icons8.com/ios-glyphs/30/000000/screenshot.png" /></button>\n                </div>\n                <canvas id="myCanvasElement"></canvas>\n            </div>\n\n            <div id="functions" class="">\n\n\n                <div class="config">\n                    <h6 class="configText">Configuration</h6>\n                </div>\n\n                <!-- rotation section -->\n                <button id="col1" class="collapsible"><span>Rotation</span><img id="icon1" src="https://img.icons8.com/ios-filled/50/000000/expand-arrow--v1.png" /></button>\n                <div class="content">\n                    <div class="sectionWrapper">\n                        <div class="autoRotation flexSpaceBetween">\n                            <p>Autorotation</p>\n                            <label class="switch">\n                                <input type="checkbox" id="autoRotationBtn" checked>\n                                <span class="slider round"></span>\n                            </label>\n                        </div>\n\n                        <div class="autoRotation">\n                            <p>Autorotation speed</p>\n                            <input type="range" min=${controllerValue.htmlRotationSpeedMin?controllerValue.htmlRotationSpeedMin:-50} max=${controllerValue.htmlRotationSpeedMax?controllerValue.htmlRotationSpeedMax:50} \n                            step=${controllerValue.htmlRotationSpeedStep?controllerValue.htmlRotationSpeedStep:5} \n                            value=${controllerValue.htmlRotationSpeedStep?controllerValue.htmlRotationSpeedStep:10} class="sliderRange" id="myRange">\n\n                        </div>\n\n                        <div class="autoRotation">\n                            <p>Rotation Top Limit</p>\n                            <input type="range" \n                            min=${controllerValue.htmlRotationtopLimiteMin?controllerValue.htmlRotationtopLimiteMin:1.6} \n                            max=${controllerValue.htmlRotationtopLimiteMax?controllerValue.htmlRotationtopLimiteMax:3.2} \n                            step=${controllerValue.htmlRotationLimiteStep?controllerValue.htmlRotationLimiteStep:.2} \n                            value=${controllerValue.htmlRotationtopLimiteDefaultValue?controllerValue.htmlRotationtopLimiteDefaultValue:3.1} class="sliderRange"\n                                id="myRangeTopLimite">\n\n                        </div>\n                        <div class="autoRotation">\n                            <p>Rotation Bottom Limit</p>\n                            <input type="range" \n                            min=${controllerValue.htmlRotationBottonLimiteMin?controllerValue.htmlRotationBottonLimiteMin:0} \n                            max=${controllerValue.htmlRotationBottonLimiteMax?controllerValue.htmlRotationBottonLimiteMax:1.6} \n                            step=${controllerValue.htmlRotationLimiteStep?controllerValue.htmlRotationLimiteStep:.2}\n                            value=${controllerValue.htmlRotationBottonLimiteDefaultValue?controllerValue.htmlRotationBottonLimiteDefaultValue:0} \n                            class="sliderRange reversedRange"\n                                id="myRangeBottomLimite">\n\n                        </div>\n                    </div>\n                </div>\n\n\n                <!-- zoom section  -->\n\n                <button id="col2" class="collapsible"><span>Zoom</span> <img id="icon2" src="https://img.icons8.com/ios-filled/50/000000/expand-arrow--v1.png" /></button>\n                <div class="content">\n                    <div class="sectionWrapper">\n\n                        <div class="autoRotation flexSpaceBetween">\n                            <p>Zoom Enable</p>\n                            <label class="switch">\n                                <input type="checkbox" id="ZoomBtn" checked>\n                                <span class="slider round"></span>\n                            </label>\n                        </div>\n\n                        <div class="autoRotation">\n                            <p>Zoom In limit</p>\n                            <input type="range" \n                            min=${controllerValue.htmlZoomInMin?controllerValue.htmlZoomInMin:-10} \n                            max=${controllerValue.htmlZoomInMax?controllerValue.htmlZoomInMax:10} \n                            step=${controllerValue.zoomStape?controllerValue.zoomStape:2} \n                            value=${controllerValue.htmlZoomInDefaultValue?controllerValue.htmlZoomInDefaultValue:10} \n                            class="sliderRange reversedRange"\n                                id="ZoomLimiteIn">\n\n                        </div>\n                        <div class="autoRotation">\n                            <p>Zoom Out limit</p>\n                            <input type="range" \n                            min=${controllerValue.htmlZoomOutMin?controllerValue.htmlZoomOutMin:50} \n                            max=${controllerValue.htmlZoomOutMax?controllerValue.htmlZoomOutMax:90} \n                            step=${controllerValue.zoomStape?controllerValue.zoomStape:2} \n                            value=${controllerValue.htmlZoomOutDefaultValue?controllerValue.htmlZoomOutDefaultValue:50} \n                            class="sliderRange "\n                                id="ZoomLimiteOut">\n\n                        </div>\n                    </div>\n                </div>\n\n\n\n                <!-- background section -->\n                <button id="col3" class="collapsible"><span>background</span> <img id="icon3" src="https://img.icons8.com/ios-filled/50/000000/expand-arrow--v1.png" /></button>\n                <div class="content">\n                    <div class="btnGroup">\n                        <button class="bgBtn bgLeftBtn">Plain Background</button>\n                        <button class="bgBtn bgRightBtn">Texture Background</button>\n                    </div>\n                    <div class="sectionWrapper">\n                        <div id="plainBackground">\n                            <p class='pbg'>Choose Plain Background Color</p>\n                            \n                            <div class="bgInputWrapper">\n                            <div class = 'pbg'>\n                                <div class="radioInputDiv">\n                                    <input class="hide" type="radio" id="skyblue" name="bg" value="skyblue">\n                                    <label class="radioLabel Skyblue" for="skyblue"></label>\n                                </div>\n\n                                <div class="radioInputDiv">\n                                    <input class="hide" type="radio" id="red" name="bg" value="red">\n                                    <label class="radioLabel red" for="red"></label>\n                                </div>\n\n                                <div class="radioInputDiv">\n                                    <input class="hide" type="radio" id="gray" name="bg" value="gray">\n                                    <label class="radioLabel gray" for="gray"></label>\n                                </div>\n\n                                <div class="radioInputDiv">\n                                    <input class="hide" type="radio" id="blue" name="bg" value="blue">\n                                    <label class="radioLabel blue" for="blue"></label>\n                                </div>\n\n                                <div class="radioInputDiv">\n                                    <input class="hide" type="radio" id="green" name="bg" value="green">\n                                    <label class="radioLabel green" for="green"></label>\n                                </div>\n\n                                <div class="radioInputDiv">\n                                    <input class="hide" type="radio" id="yellow" name="bg" value="yellow">\n                                    <label class="radioLabel yellow" for="yellow"></label>\n                                </div>\n                            </div>\n                            <div class='pbg_msg'>\n                                No background available check texture\n                            </div>\n                            </div>\n                        </div>\n                        <div id="TextureBackground" class="hide">\n                            <p class='tbg'>Choose Texture Background</p>\n                            \n                            <div class="bgInputWrapper">\n                                <div class='tbg'>\n                                    <div class="radioInputDiv">\n                                        <input class="hide" type="radio" id="texture1" name="bg" value="texture1">\n                                        <label class="radioLabel texture1" for="texture1"></label>\n                                    </div>\n\n                                    <div class="radioInputDiv">\n                                        <input class="hide" type="radio" id="texture2" name="bg" value="texture2">\n                                        <label class="radioLabel texture2" for="texture2"></label>\n                                    </div>\n\n                                    <div class="radioInputDiv">\n                                        <input class="hide" type="radio" id="texture3" name="bg" value="texture3">\n                                        <label class="radioLabel texture3" for="texture3"></label>\n                                    </div>\n                                </div>\n\n                                <div class='tbg_msg'>\n                                    No background available check plane\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                    <br><br>\n                </div>\n\n                <!-- upload section -->\n                <button id="col4" class="collapsible"><span>Upload a model</span> <img id="icon4" src="https://img.icons8.com/ios-filled/50/000000/expand-arrow--v1.png" /></button>\n                <div class="content">\n                    <div class="btnGroup">\n                        <button class="bgBtn upLeftBtn">File Upload</button>\n                        <button class="bgBtn upRightBtn">URL Upload</button>\n                    </div>\n\n                    <div class="sectionWrapper">\n                        <div id="uploadFile">\n                            <p>Upload a gltf/obj/fbx file</p>\n                            <br>\n                            <input type="file" id="fileInput">\n                            <button id="fileUploadBtn" class="btn">File Upload</button>\n                        </div>\n                        <div id="urlFile" class="hide">\n                            <p>gltf/fbx/obj model url</p>\n                            <br>\n                            <input type="text" id="urlInput" placeholder="Enter URL Here" autocomplete="off">\n                            <button id="urlUploadBtn" class="btn">URL Upload</button>\n                        </div>\n\n\n                        <br><br>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    </div>`;let styles=`@import url('https://fonts.googleapis.com/css2?family=IBM+Plex+Sans+Thai+Looped:wght@100;300&display=swap');\n\n* {\n    margin: 0;\n    padding: 0;\n}\n*:focus {\n    outline: none;\n}\n\nbody {\n    height: 100vh;\n}\n\n.container {\n    width: 80%;\n    margin: auto;\n    height: auto;\n}\n\n.wrapper {\n    display: flex;\n    height: 80%;\n}\n\n.wrapperClone {\n    display: grid;\n    grid-template-columns: auto;\n    height: 80%;\n}\n\n.canvasWrapper {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    position: relative;\n    \n}\n\ncanvas {\n    height: 70vh;\n    width: 100%;\n}\n\n.actionButton {\n    position: absolute;\n    right: 10px;\n    top: 10px;\n}\n\n.actionButton button {\n    padding: 13px 15px;\n    margin: 2px;\n    border: none;\n    border-radius: 50%;\n    cursor: pointer;\n}\n\n.heading h1 {\n    text-align: center;\n    font-size: 50px;\n    margin-bottom: 1rem;\n    font-family: IBM Plex Sans Thai Looped;\n}\n\n#functions {\n    display: ${!1===controllerValue.controllerNonVisibility?"block":"none"};\n    padding: 0 20px;\n    width: 67%;\n}\n.sectionWrapper {\n    width: 95%;\n    margin: auto;\n}\n\n.hide {\n    display: none;\n}\n\n.reversedRange {\n    direction: rtl;\n}\n\n.config {\n    padding: 15px 0;\n    background: #f1f1f1;\n}\n\n.configText {\n    text-align: center;\n    font-family: IBM Plex Sans Thai Looped;\n    /* font-weight: bold; */\n    font-size: 1rem;\n}\n\n.font_style{\n    font-family: IBM Plex Sans Thai Looped;\n    font-weight: bold;\n}\n\n/* collapsable */\n\n.collapsible {\n    background-color: white;\n    color: #009fdb;\n    font-weight: bold;\n    border: 1px solid rgba(0, 0, 0, 0.125);\n    border-radius: 2px;\n    cursor: pointer;\n    padding: 17px;\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n    text-align: left;\n    outline: none;\n    font-size: 15px;\n}\n\n.rotation {\n    transform: rotate(-180deg);\n}\n\ni{\n    transition: 00.5s ease;\n    color: black;\n}\nbutton img{\n    transition: 00.5s ease;\n    width: 16px;\n}\n\n.content {\n    padding: 0 18px;\n    max-height: 0;\n    overflow: hidden;\n    transition: max-height 0.2s ease-out;\n    background-color: #f1f1f1;\n}\n\n/* rotation section  */\n\n.autoRotation {\n    margin: 10px ;\n}\n\n.flexSpaceBetween {\n    display: flex;\n    justify-content: space-between;\n}\n\n/* checkbox design/ */\n\n.switch {\n    position: relative;\n    display: inline-block;\n    width: 50px;\n    height: 24px;\n}\n\n.switch input {\n    opacity: 0;\n    width: 0;\n    height: 0;\n}\n\n.slider {\n    position: absolute;\n    cursor: pointer;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: #ccc;\n    -webkit-transition: 0.4s;\n    transition: 0.4s;\n}\n\n.slider:before {\n    position: absolute;\n    content: "";\n    height: 15px;\n    width: 15px;\n    left: 4px;\n    bottom: 4px;\n    background-color: white;\n    -webkit-transition: 0.4s;\n    transition: 0.4s;\n}\n\ninput:checked + .slider {\n    background-color: #2196f3;\n}\n\ninput:focus + .slider {\n    box-shadow: 0 0 1px #2196f3;\n}\n\ninput:checked + .slider:before {\n    -webkit-transform: translateX(26px);\n    -ms-transform: translateX(26px);\n    transform: translateX(26px);\n}\n\n/* Rounded sliders */\n.slider.round {\n    border-radius: 34px;\n}\n\n.slider.round:before {\n    border-radius: 50%;\n}\n\n/* range input design  */\n\n.sliderRange {\n    margin: 10px;\n    -webkit-appearance: none;\n    width: 100%;\n    height: 10px;\n    border-radius: 5px;\n    background: #d3d3d3;\n    outline: none;\n    opacity: 1;\n    -webkit-transition: 0.2s;\n    transition: opacity 0.2s;\n}\n\n.sliderRange::-webkit-slider-thumb {\n    -webkit-appearance: none;\n    appearance: none;\n    width: 15px;\n    height: 15px;\n    border-radius: 50%;\n    background: blue;\n    cursor: pointer;\n}\n\n.sliderRange::-moz-range-thumb {\n    width: 25px;\n    height: 25px;\n    border-radius: 50%;\n    background: #04aa6d;\n    cursor: pointer;\n}\n\n/* background section */\n\n.bgInputWrapper {\n    display: flex;\n}\n.pbg{\n    display: ${controllerValue.bgColor&&0!==controllerValue.bgColor.length?"flex":"none"};\n}\n.pbg_msg{\n    padding: 25px;\n    display: ${controllerValue.bgColor&&0!==controllerValue.bgColor.length?"none":"flex"};\n}\n\n.radioInputDiv {\n    margin: 5px;\n}\n\n.radioLabel {\n    padding: 23px 23px;\n    border-radius: 5px;\n    cursor: pointer;\n}\n\n.Skyblue {\n    display: ${void 0===typeof controllerValue?"skyblue":controllerValue.bgColor&&controllerValue.bgColor[0]?"inline-block":"none"};\n    background: ${controllerValue.bgColor?controllerValue.bgColor[0]:"skyblue"};\n}\n\n.red {\n    display: ${controllerValue.bgColor&&controllerValue.bgColor[1]?"inline-block":"none"};\n    background: ${controllerValue.bgColor?controllerValue.bgColor[1]:"skyblue"};\n}\n\n.gray {\n    display: ${controllerValue.bgColor&&controllerValue.bgColor[2]?"inline-block":"none"};\n    background: ${controllerValue.bgColor?controllerValue.bgColor[2]:"skyblue"};\n}\n\n.blue {\n    display: ${controllerValue.bgColor&&controllerValue.bgColor[3]?"inline-block":"none"};\n    background: ${controllerValue.bgColor?controllerValue.bgColor[3]:"skyblue"};\n}\n\n.green {\n    display: ${controllerValue.bgColor&&controllerValue.bgColor[4]?"inline-block":"none"};\n    background: ${controllerValue.bgColor?controllerValue.bgColor[4]:"skyblue"};\n}\n\n.yellow {\n    display: ${controllerValue.bgColor&&controllerValue.bgColor[5]?"inline-block":"none"};\n    background: ${controllerValue.bgColor?controllerValue.bgColor[5]:"skyblue"};\n}\n\n/* texture background start */\n\n.tbg{\n    display: ${controllerValue.bgTexrute&&controllerValue.bgTexrute.length>0?"flex":"none"};\n}\n.tbg_msg{\n    display: ${controllerValue.bgTexrute&&controllerValue.bgTexrute.length>0?"none":"flex"};\n    padding: 25px;\n}\n\n.texture1 {\n    display: ${controllerValue.bgTexrute&&controllerValue.bgTexrute[0]?"inline-block":"none"};\n    background: url( ${controllerValue.bgTexrute&&controllerValue.bgTexrute[0]?controllerValue.bgTexrute[0].texture_rt:"none"});\n    background-repeat: no-repeat;\n    background-size: 50px 50px;\n    \n}\n.texture2 {\n    display: ${controllerValue.bgTexrute&&controllerValue.bgTexrute[1]?"inline-block":"none"};\n    background: url( ${controllerValue.bgTexrute&&controllerValue.bgTexrute[1]?controllerValue.bgTexrute[1].texture_rt:"none"});\n    background-repeat: no-repeat;\n    background-size: 50px 50px;\n}\n.texture3 {\n    display: ${controllerValue.bgTexrute&&controllerValue.bgTexrute[2]?"inline-block":"none"};\n    background: url( ${controllerValue.bgTexrute&&controllerValue.bgTexrute[2]?controllerValue.bgTexrute[2].texture_rt:"none"});\n    background-repeat: no-repeat;\n    background-size: 50px 50px;\n}\n\n/* texture background end */\n.btnGroup {\n    display: flex;\n    margin: 15px;\n    /*  */\n}\n.bgBtn {\n    background: none;\n    flex: 1 1 auto;\n    padding: 13px 0;\n    border-radius: 5px;\n    border: none;\n    cursor: pointer;\n}\n.bgLeftBtn,\n.upLeftBtn {\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 0;\n    background: #37c1dc;\n    transition: background-color 0.5s ease;\n}\n.bgRightBtn,\n.upRightBtn {\n    border-top-left-radius: 0;\n    border-bottom-left-radius: 0;\n    background: #246ad0;\n    color: white;\n    transition: background-color 0.5s ease;\n}\n.bgLeftBtn:hover,\n.upLeftBtn:hover {\n    background: #34b1c9;\n}\n.bgRightBtn:hover,\n.upRightBtn:hover {\n    background: #215eb8;\n}\n\n#plainBackground {\n    width: 100%;\n}\n#TextureBackground {\n    width: 100%;\n}\n\ninput {\n    width: 100%;\n}\n\n/* file upload */\n\n#fileInput,\n#urlInput {\n    padding: 8px;\n    border: 1px solid #ccc;\n}\n\n.btn {\n    width: 100%;\n    padding: 10px;\n    border: none;\n    margin: 10px 0;\n    background: #157347;\n    color: white;\n    border-radius: 5px;\n    transition: background-color 0.5s ease;\n}\n.btn:hover {\n    background: rgb(9, 77, 45);\n}\n\n/* container */\n\n@media only screen and (max-width: 1000px) {\n    .container {\n        width: 97%;\n    }\n}\n@media only screen and (max-width: 750px) {\n    .wrapper {\n        display: block;\n    }\n    #functions {\n        \n        padding: 20px 0;\n        width: auto;\n    }\n    .container {\n        width: 80%;\n    }\n}\n`,styleSheet=document.createElement("style");styleSheet.type="text/css",styleSheet.innerText=styles,document.head.appendChild(styleSheet);import*as THREE from"three";import{OrbitControls}from"OrbitControls";import{GLTFLoader,OBJLoader,FBXLoader}from"https://cdn.jsdelivr.net/gh/Siam456/FT_Filees@main/files/Loader.js";import{DRACOLoader}from"https://cdn.jsdelivr.net/gh/mrdoob/three.js@dev/examples/jsm/loaders/DRACOLoader.js";let camera,scene,renderer,mixer,controls,obj="",rotation=controllerValue.rotation||10,maxAngleForOrbit=controllerValue.maxAngleForOrbit||3.4,minAngleForOrbit=controllerValue.minAngleForOrbit||0,zoomMax=controllerValue.zoomMax||50,zoomMin=controllerValue.zoomMin||10;const clock=new THREE.Clock;init(),render();var checkBox=document.getElementById("autoRotationBtn");checkBox.addEventListener("click",()=>{
rotation=!0===checkBox.checked?document.getElementById("myRange").value:0});var RotationSpeed=document.getElementById("myRange");RotationSpeed.oninput=function(){checkBox.checked=!0,rotation=this.value};var RotationTopLimite=document.getElementById("myRangeTopLimite");RotationTopLimite.oninput=function(){maxAngleForOrbit=this.value};var RotationBottomLimite=document.getElementById("myRangeBottomLimite");RotationBottomLimite.oninput=function(){minAngleForOrbit=this.value};let inX=document.getElementById("ZoomLimiteIn").value,outX=document.getElementById("ZoomLimiteOut").value;var ZoomLimiteIn=document.getElementById("ZoomLimiteIn");ZoomLimiteIn.oninput=function(){checkBoxZoom.checked=!0,zoomMin=this.value,inX=this.value};var ZoomLimiteOut=document.getElementById("ZoomLimiteOut");ZoomLimiteOut.oninput=function(){checkBoxZoom.checked=!0,zoomMax=this.value,outX=this.value};var checkBoxZoom=document.getElementById("ZoomBtn");checkBoxZoom.addEventListener("click",()=>{!0!==checkBoxZoom.checked?(zoomMin=25,zoomMax=25):(zoomMin=inX,zoomMax=outX)});let bgLeftBtn=document.querySelector(".bgLeftBtn"),bgRightBtn=document.querySelector(".bgRightBtn");bgLeftBtn.addEventListener("click",()=>{document.getElementById("plainBackground").classList.remove("hide"),document.getElementById("TextureBackground").classList.add("hide")}),bgRightBtn.addEventListener("click",()=>{document.getElementById("plainBackground").classList.add("hide"),document.getElementById("TextureBackground").classList.remove("hide")});let skybox=null;document.getElementsByName("bg").forEach(e=>{e.addEventListener("click",()=>{if("skyblue"===e.value)null!==skybox&&scene.remove(skybox),scene.background=new THREE.Color(controllerValue.bgColor[0]);else if("red"===e.value)null!==skybox&&scene.remove(skybox),scene.background=new THREE.Color(controllerValue.bgColor[1]);else if("gray"===e.value)null!==skybox&&scene.remove(skybox),scene.background=new THREE.Color(controllerValue.bgColor[2]);else if("blue"===e.value)null!==skybox&&scene.remove(skybox),scene.background=new THREE.Color(controllerValue.bgColor[3]);else if("green"===e.value)null!==skybox&&scene.remove(skybox),scene.background=new THREE.Color(controllerValue.bgColor[4]);else if("yellow"===e.value)null!==skybox&&scene.remove(skybox),scene.background=new THREE.Color(controllerValue.bgColor[5]);else if("texture1"===e.value){null!==skybox&&scene.remove(skybox);let e=[],n=(new THREE.TextureLoader).load(controllerValue.bgTexrute[0].texture_ft),t=(new THREE.TextureLoader).load(controllerValue.bgTexrute[0].texture_bk),o=(new THREE.TextureLoader).load(controllerValue.bgTexrute[0].texture_up),l=(new THREE.TextureLoader).load(controllerValue.bgTexrute[0].texture_dn),i=(new THREE.TextureLoader).load(controllerValue.bgTexrute[0].texture_rt),a=(new THREE.TextureLoader).load(controllerValue.bgTexrute[0].texture_lf);e.push(new THREE.MeshBasicMaterial({map:n})),e.push(new THREE.MeshBasicMaterial({map:t})),e.push(new THREE.MeshBasicMaterial({map:o})),e.push(new THREE.MeshBasicMaterial({map:l})),e.push(new THREE.MeshBasicMaterial({map:i})),e.push(new THREE.MeshBasicMaterial({map:a}));for(let n=0;n<6;n++)e[n].side=THREE.BackSide;let r=new THREE.BoxGeometry(100,100,100);skybox=new THREE.Mesh(r,e),scene.add(skybox)}else if("texture2"===e.value){null!==skybox&&scene.remove(skybox);let e=[],n=(new THREE.TextureLoader).load(controllerValue.bgTexrute[1].texture_ft),t=(new THREE.TextureLoader).load(controllerValue.bgTexrute[1].texture_bk),o=(new THREE.TextureLoader).load(controllerValue.bgTexrute[1].texture_up),l=(new THREE.TextureLoader).load(controllerValue.bgTexrute[1].texture_dn),i=(new THREE.TextureLoader).load(controllerValue.bgTexrute[1].texture_rt),a=(new THREE.TextureLoader).load(controllerValue.bgTexrute[1].texture_lf);e.push(new THREE.MeshBasicMaterial({map:n})),e.push(new THREE.MeshBasicMaterial({map:t})),e.push(new THREE.MeshBasicMaterial({map:o})),e.push(new THREE.MeshBasicMaterial({map:l})),e.push(new THREE.MeshBasicMaterial({map:i})),e.push(new THREE.MeshBasicMaterial({map:a}));for(let n=0;n<6;n++)e[n].side=THREE.BackSide;let r=new THREE.BoxGeometry(100,100,100);skybox=new THREE.Mesh(r,e),scene.add(skybox)}else if("texture3"===e.value){null!==skybox&&scene.remove(skybox);let e=[],n=(new THREE.TextureLoader).load(controllerValue.bgTexrute[2].texture_ft),t=(new THREE.TextureLoader).load(controllerValue.bgTexrute[2].texture_bk),o=(new THREE.TextureLoader).load(controllerValue.bgTexrute[2].texture_up),l=(new THREE.TextureLoader).load(controllerValue.bgTexrute[2].texture_dn),i=(new THREE.TextureLoader).load(controllerValue.bgTexrute[2].texture_rt),a=(new THREE.TextureLoader).load(controllerValue.bgTexrute[2].texture_lf);e.push(new THREE.MeshBasicMaterial({map:n})),e.push(new THREE.MeshBasicMaterial({map:t})),e.push(new THREE.MeshBasicMaterial({map:o})),e.push(new THREE.MeshBasicMaterial({map:l})),e.push(new THREE.MeshBasicMaterial({map:i})),e.push(new THREE.MeshBasicMaterial({map:a}));for(let n=0;n<6;n++)e[n].side=THREE.BackSide;let r=new THREE.BoxGeometry(100,100,100);skybox=new THREE.Mesh(r,e),scene.add(skybox)}})});let upLeftBtn=document.querySelector(".upLeftBtn"),upRightBtn=document.querySelector(".upRightBtn");upLeftBtn.addEventListener("click",()=>{document.getElementById("uploadFile").classList.remove("hide"),document.getElementById("urlFile").classList.add("hide")}),upRightBtn.addEventListener("click",()=>{document.getElementById("uploadFile").classList.add("hide"),document.getElementById("urlFile").classList.remove("hide")});var colBtn1=document.getElementById("col1"),colBtn2=document.getElementById("col2"),colBtn3=document.getElementById("col3"),colBtn4=document.getElementById("col4");let icon1=document.getElementById("icon1"),icon2=document.getElementById("icon2"),icon3=document.getElementById("icon3"),icon4=document.getElementById("icon4");colBtn1.addEventListener("click",function(){var e=this.nextElementSibling,n=colBtn2.nextElementSibling,t=colBtn3.nextElementSibling,o=colBtn4.nextElementSibling;e.style.maxHeight?(e.style.maxHeight=null,icon1.classList.remove("rotation")):(e.style.maxHeight=e.scrollHeight+"px",n.style.maxHeight=null,t.style.maxHeight=null,o.style.maxHeight=null,icon1.classList.add("rotation"),icon2.classList.remove("rotation"),icon3.classList.remove("rotation"),icon4.classList.remove("rotation"))}),colBtn2.addEventListener("click",function(){var e=this.nextElementSibling,n=colBtn1.nextElementSibling,t=colBtn3.nextElementSibling,o=colBtn4.nextElementSibling;e.style.maxHeight?(e.style.maxHeight=null,icon2.classList.remove("rotation")):(e.style.maxHeight=e.scrollHeight+"px",n.style.maxHeight=null,t.style.maxHeight=null,o.style.maxHeight=null,icon1.classList.remove("rotation"),icon2.classList.add("rotation"),icon3.classList.remove("rotation"),icon4.classList.remove("rotation"))}),colBtn3.addEventListener("click",function(){var e=this.nextElementSibling,n=colBtn2.nextElementSibling,t=colBtn1.nextElementSibling,o=colBtn4.nextElementSibling;e.style.maxHeight?(e.style.maxHeight=null,icon3.classList.remove("rotation")):(e.style.maxHeight=e.scrollHeight+"px",n.style.maxHeight=null,t.style.maxHeight=null,o.style.maxHeight=null,icon1.classList.remove("rotation"),icon2.classList.remove("rotation"),icon3.classList.add("rotation"),icon4.classList.remove("rotation"))}),colBtn4.addEventListener("click",function(){var e=this.nextElementSibling,n=colBtn2.nextElementSibling,t=colBtn3.nextElementSibling,o=colBtn1.nextElementSibling;e.style.maxHeight?(e.style.maxHeight=null,icon4.classList.remove("rotation")):(e.style.maxHeight=e.scrollHeight+"px",n.style.maxHeight=null,t.style.maxHeight=null,o.style.maxHeight=null,icon1.classList.remove("rotation"),icon2.classList.remove("rotation"),icon3.classList.remove("rotation"),icon4.classList.add("rotation"))});let fullScreen=document.getElementById("fullscreen"),snapShot=document.getElementById("snapshot"),check=!0;fullScreen.addEventListener("click",()=>{if(check)document.querySelector("#functions").style.display="none",document.querySelector(".heading").classList.add("hide"),document.querySelector(".container").style.width="100%",document.getElementById("myCanvasElement").style.height="100vh",renderer.setSize(window.innerWidth,window.innerHeight,!1),camera.aspect=window.innerWidth/window.innerHeight,camera.updateProjectionMatrix(),check=!1;else{!1===controllerValue.controllerNonVisibility&&(document.querySelector("#functions").style.display="block"),document.querySelector(".heading").classList.remove("hide"),document.querySelector(".container").style.width="80%",document.getElementById("myCanvasElement").style.height="70vh";const e=renderer.domElement,n=e.clientWidth,t=e.clientHeight;renderer.setSize(n,t,!1),camera.aspect=n/t,camera.updateProjectionMatrix(),check=!0}}),snapShot.addEventListener("click",()=>{var e=document.getElementById("myCanvasElement"),n=e.toDataURL(),t=document.createElement("a");t.setAttribute("href",n),t.setAttribute("target","_blank"),t.setAttribute("download","canvas.png"),t.click()});