let controllerValue;controllerValue="object"==typeof mainControllerValue?mainControllerValue:{mainHeading:"3D viewer",assetLink:"https://threejsfundamentals.org/threejs/resources/models/cartoon_lowpoly_small_city_free_pack/scene.gltf",controllerVisibility:!0,rotation:!0,maxAngleForOrbit:3.4,minAngleForOrbit:0,zoom:!0,zoomMax:50,zoomMin:10,defaultbg:"skyblue",bgColor:["skyblue","#D14250","#8B9298","#3888FD","#198754","#FFC107"],bgTexture:[{texture_ft:"https://raw.githubusercontent.com/Siam456/FT_Filees/main/backgroundTexture/tropic_ft.jpg",texture_bk:"https://raw.githubusercontent.com/Siam456/FT_Filees/main/backgroundTexture/tropic_bk.jpg",texture_up:"https://raw.githubusercontent.com/Siam456/FT_Filees/main/backgroundTexture/tropic_up.jpg",texture_dn:"https://raw.githubusercontent.com/Siam456/FT_Filees/main/backgroundTexture/tropic_dn.jpg",texture_rt:"https://raw.githubusercontent.com/Siam456/FT_Filees/main/backgroundTexture/tropic_rt.jpg",texture_lf:"https://raw.githubusercontent.com/Siam456/FT_Filees/main/backgroundTexture/tropic_lf.jpg"},{texture_ft:"https://raw.githubusercontent.com/Siam456/FT_Filees/main/backgroundTexture/arid2_ft.jpg",texture_bk:"https://raw.githubusercontent.com/Siam456/FT_Filees/main/backgroundTexture/arid2_bk.jpg",texture_up:"https://raw.githubusercontent.com/Siam456/FT_Filees/main/backgroundTexture/arid2_up.jpg",texture_dn:"https://raw.githubusercontent.com/Siam456/FT_Filees/main/backgroundTexture/arid2_dn.jpg",texture_rt:"https://raw.githubusercontent.com/Siam456/FT_Filees/main/backgroundTexture/arid2_rt.jpg",texture_lf:"https://raw.githubusercontent.com/Siam456/FT_Filees/main/backgroundTexture/arid2_lf.jpg"},{texture_ft:"https://raw.githubusercontent.com/Siam456/FT_Filees/main/backgroundTexture/zeus_ft.jpg",texture_bk:"https://raw.githubusercontent.com/Siam456/FT_Filees/main/backgroundTexture/zeus_bk.jpg",texture_up:"https://raw.githubusercontent.com/Siam456/FT_Filees/main/backgroundTexture/zeus_up.jpg",texture_dn:"https://raw.githubusercontent.com/Siam456/FT_Filees/main/backgroundTexture/zeus_dn.jpg",texture_rt:"https://raw.githubusercontent.com/Siam456/FT_Filees/main/backgroundTexture/zeus_rt.jpg",texture_lf:"https://raw.githubusercontent.com/Siam456/FT_Filees/main/backgroundTexture/zeus_lf.jpg"}],rotationSpeedMin:-50,rotationSpeedMax:50,rotationSpeedStep:5,rotationSpeedDefaultValue:10,rotationtopLimitMin:1.6,rotationtopLimitMax:3.2,rotationBottomLimitMin:0,rotationBottomLimitMax:1.6,rotationLimitStep:.2,rotationtopLimitDefaultValue:3.1,rotationBottomLimitDefault:0,zoomInMin:-10,zoomInMax:10,zoomOutMin:50,zoomOutMin:90,zoomStape:2,zoomStape:10,zoomOutDefaultValue:50},"boolean"!=typeof controllerValue.controllerVisibility&&(controllerValue.controllerVisibility=!0),"boolean"!=typeof controllerValue.zoom&&(controllerValue.zoom=!1),document.getElementById("bs_3D_viewer_root").innerHTML=`\n<div class="bs__3d__viewer__container">\n        <div class="bs__3d__viewer__heading">\n            <h1>${controllerValue.mainHeading?controllerValue.mainHeading:" "}</h1>\n\n        </div>\n        <div class="bs__3d__viewer__wrapper" id="wrapperId">\n            <div class="bs__3d__viewer__canvasWrapper">\n                <div class="bs__3d__viewer__actionButton">\n                    <button id="fullscreen"><img height="15px"\n                            src="https://img.icons8.com/ios-glyphs/30/000000/full-screen--v1.png" /></button>\n                    <button id="snapshot"><img height="15px"\n                            src="https://img.icons8.com/ios-glyphs/30/000000/screenshot.png" /></button>\n                </div>\n                <canvas id="myCanvasElement"></canvas>\n            </div>\n\n            <div id="functions" class="bs__3d__viewer__">\n\n\n                <div class="bs__3d__viewer__config">\n                    <h6 class="bs__3d__viewer__configText">Configuration</h6>\n                </div>\n\n                \x3c!-- rotation section --\x3e\n                <button id="col1" class="bs__3d__viewer__collapsible"><span>Rotation</span><img id="icon1" src="https://img.icons8.com/ios-filled/50/000000/expand-arrow--v1.png" /></button>\n                <div class="bs__3d__viewer__content">\n                    <div class="bs__3d__viewer__sectionWrapper">\n                        <div class="bs__3d__viewer__autoRotation bs__3d__viewer__flexSpaceBetween">\n                            <p>Autorotation</p>\n                            <label class="bs__3d__viewer__switch">\n                                <input type="checkbox" id="autoRotationBtn" checked>\n                                <span class="bs__3d__viewer__slider bs__3d__viewer__round"></span>\n                            </label>\n                        </div>\n\n                        <div class="bs__3d__viewer__autoRotation">\n                            <p>Autorotation speed</p>\n                            <input type="range" min=${controllerValue.rotationSpeedMin?controllerValue.rotationSpeedMin:-50} max=${controllerValue.rotationSpeedMax?controllerValue.rotationSpeedMax:50} \n                            step=${controllerValue.rotationSpeedStep?controllerValue.rotationSpeedStep:5} \n                            value=${controllerValue.rotationSpeedStep?controllerValue.rotationSpeedStep:10} class="bs__3d__viewer__sliderRange" id="myRange">\n\n                        </div>\n\n                        <div class="bs__3d__viewer__autoRotation">\n                            <p>Rotation Top Limit</p>\n                            <input type="range" \n                            min=${controllerValue.rotationtopLimitMin?controllerValue.rotationtopLimitMin:1.6} \n                            max=${controllerValue.rotationtopLimitMax?controllerValue.rotationtopLimitMax:3.2} \n                            step=${controllerValue.rotationLimitStep?controllerValue.rotationLimitStep:.2} \n                            value=${controllerValue.rotationtopLimitDefaultValue?controllerValue.rotationtopLimitDefaultValue:3.1} class="bs__3d__viewer__sliderRange"\n                                id="myRangeTopLimite">\n\n                        </div>\n                        <div class="bs__3d__viewer__autoRotation">\n                            <p>Rotation Bottom Limit</p>\n                            <input type="range" \n                            min=${controllerValue.rotationBottomLimitMin?controllerValue.rotationBottomLimitMin:0} \n                            max=${controllerValue.rotationBottomLimitMax?controllerValue.rotationBottomLimitMax:1.6} \n                            step=${controllerValue.rotationLimitStep?controllerValue.rotationLimitStep:.2}\n                            value=${controllerValue.rotationBottomLimitDefault?controllerValue.rotationBottomLimitDefault:0} \n                            class="bs__3d__viewer__sliderRange bs__3d__viewer__reversedRange"\n                                id="myRangeBottomLimite">\n\n                        </div>\n                    </div>\n                </div>\n\n\n                \x3c!-- zoom section  --\x3e\n\n                <button id="col2" class="bs__3d__viewer__collapsible"><span>Zoom</span> <img id="icon2" src="https://img.icons8.com/ios-filled/50/000000/expand-arrow--v1.png" /></button>\n                <div class="bs__3d__viewer__content">\n                    <div class="bs__3d__viewer__sectionWrapper">\n\n                        <div class="bs__3d__viewer__autoRotation bs__3d__viewer__flexSpaceBetween">\n                            <p>Zoom Enable</p>\n                            <label class="bs__3d__viewer__switch">\n                                <input type="checkbox" id="ZoomBtn" checked>\n                                <span class="bs__3d__viewer__slider bs__3d__viewer__round"></span>\n                            </label>\n                        </div>\n\n                        <div class="bs__3d__viewer__autoRotation">\n                            <p>Zoom In limit</p>\n                            <input type="range" \n                            min=${controllerValue.zoomInMin?controllerValue.zoomInMin:-10} \n                            max=${controllerValue.zoomInMax?controllerValue.zoomInMax:10} \n                            step=${controllerValue.zoomStape?controllerValue.zoomStape:2} \n                            value=${controllerValue.zoomInDefaultValue?controllerValue.zoomInDefaultValue:10} \n                            class="bs__3d__viewer__sliderRange bs__3d__viewer__reversedRange"\n                                id="ZoomLimiteIn">\n\n                        </div>\n                        <div class="bs__3d__viewer__autoRotation">\n                            <p>Zoom Out limit</p>\n                            <input type="range" \n                            min=${controllerValue.zoomOutMin?controllerValue.zoomOutMin:50} \n                            max=${controllerValue.zoomOutMin?controllerValue.zoomOutMin:90} \n                            step=${controllerValue.zoomStape?controllerValue.zoomStape:2} \n                            value=${controllerValue.zoomOutDefaultValue?controllerValue.zoomOutDefaultValue:50} \n                            class="bs__3d__viewer__sliderRange "\n                                id="ZoomLimiteOut">\n\n                        </div>\n                    </div>\n                </div>\n\n\n\n                \x3c!-- background section --\x3e\n                <button id="col3" class="bs__3d__viewer__collapsible"><span>background</span> <img id="icon3" src="https://img.icons8.com/ios-filled/50/000000/expand-arrow--v1.png" /></button>\n                <div class="bs__3d__viewer__content">\n                    <div class="bs__3d__viewer__btnGroup">\n                        <button class="bs__3d__viewer__bgBtn bs__3d__viewer__bgLeftBtn">Plain Background</button>\n                        <button class="bs__3d__viewer__bgBtn bs__3d__viewer__bgRightBtn">Texture Background</button>\n                    </div>\n                    <div class="bs__3d__viewer__sectionWrapper">\n                        <div id="plainBackground">\n                            <p class='pbg'>Choose Plain Background Color</p>\n                            \n                            <div class="bs__3d__viewer__bgInputWrapper">\n                            <div class = 'pbg'>\n                                <div class="bs__3d__viewer__radioInputDiv">\n                                    <input class="bs__3d__viewer__hide" type="radio" id="skyblue" name="bg" value="skyblue">\n                                    <label class="bs__3d__viewer__radioLabel bs__3d__viewer__Skyblue" for="skyblue"></label>\n                                </div>\n\n                                <div class="bs__3d__viewer__radioInputDiv">\n                                    <input class="bs__3d__viewer__hide" type="radio" id="red" name="bg" value="red">\n                                    <label class="bs__3d__viewer__radioLabel bs__3d__viewer__red" for="red"></label>\n                                </div>\n\n                                <div class="bs__3d__viewer__radioInputDiv">\n                                    <input class="bs__3d__viewer__hide" type="radio" id="gray" name="bg" value="gray">\n                                    <label class="bs__3d__viewer__radioLabel bs__3d__viewer__gray" for="gray"></label>\n                                </div>\n\n                                <div class="bs__3d__viewer__radioInputDiv">\n                                    <input class="bs__3d__viewer__hide" type="radio" id="blue" name="bg" value="blue">\n                                    <label class="bs__3d__viewer__radioLabel bs__3d__viewer__blue" for="blue"></label>\n                                </div>\n\n                                <div class="bs__3d__viewer__radioInputDiv">\n                                    <input class="bs__3d__viewer__hide" type="radio" id="green" name="bg" value="green">\n                                    <label class="bs__3d__viewer__radioLabel bs__3d__viewer__green" for="green"></label>\n                                </div>\n\n                                <div class="bs__3d__viewer__radioInputDiv">\n                                    <input class="bs__3d__viewer__hide" type="radio" id="yellow" name="bg" value="yellow">\n                                    <label class="bs__3d__viewer__radioLabel bs__3d__viewer__yellow" for="yellow"></label>\n                                </div>\n                            </div>\n                            <div class='pbg_msg'>\n                                No background available check texture\n                            </div>\n                            </div>\n                        </div>\n                        <div id="TextureBackground" class="bs__3d__viewer__hide">\n                            <p class='tbg'>Choose Texture Background</p>\n                            \n                            <div class="bs__3d__viewer__bgInputWrapper">\n                                <div class='tbg'>\n                                    <div class="bs__3d__viewer__radioInputDiv">\n                                        <input class="bs__3d__viewer__hide" type="radio" id="texture1" name="bg" value="texture1">\n                                        <label class="bs__3d__viewer__radioLabel texture1" for="texture1"></label>\n                                    </div>\n\n                                    <div class="bs__3d__viewer__radioInputDiv">\n                                        <input class="bs__3d__viewer__hide" type="radio" id="texture2" name="bg" value="texture2">\n                                        <label class="bs__3d__viewer__radioLabel texture2" for="texture2"></label>\n                                    </div>\n\n                                    <div class="bs__3d__viewer__radioInputDiv">\n                                        <input class="bs__3d__viewer__hide" type="radio" id="texture3" name="bg" value="texture3">\n                                        <label class="bs__3d__viewer__radioLabel texture3" for="texture3"></label>\n                                    </div>\n                                </div>\n\n                                <div class='tbg_msg'>\n                                    No background available check plane\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                    <br><br>\n                </div>\n\n                \x3c!-- upload section --\x3e\n                <button id="col4" class="bs__3d__viewer__collapsible"><span>Upload a model</span> <img id="icon4" src="https://img.icons8.com/ios-filled/50/000000/expand-arrow--v1.png" /></button>\n                <div class="bs__3d__viewer__content">\n                    <div class="bs__3d__viewer__btnGroup">\n                        <button class="bs__3d__viewer__bgBtn bs__3d__viewer__upLeftBtn">File Upload</button>\n                        <button class="bs__3d__viewer__bgBtn bs__3d__viewer__upRightBtn">URL Upload</button>\n                    </div>\n\n                    <div class="bs__3d__viewer__sectionWrapper">\n                        <div id="uploadFile">\n                            <p>Upload a gltf/obj/fbx file</p>\n                            <br>\n                            <input type="file" id="fileInput">\n                            <button id="fileUploadBtn" class="bs__3d__viewer__btn">File Upload</button>\n                        </div>\n                        <div id="urlFile" class="bs__3d__viewer__hide">\n                            <p>gltf/fbx/obj model url</p>\n                            <br>\n                            <input type="text" id="urlInput" placeholder="Enter URL Here" autocomplete="off">\n                            <button id="urlUploadBtn" class="bs__3d__viewer__btn">URL Upload</button>\n                        </div>\n\n\n                        <br><br>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    </div>`;let styles=`@import url('https://fonts.googleapis.com/css2?family=IBM+Plex+Sans+Thai+Looped:wght@100;300&display=swap');\n\n* {\n  margin: 0;\n  padding: 0;\n}\n*:focus {\n  outline: none;\n}\n\nbody {\n  height: 100vh;\n}\n\n.bs__3d__viewer__container {\n  width: 80%;\n  margin: auto;\n  height: auto;\n}\n\n.bs__3d__viewer__wrapper {\n  display: flex;\n  height: 80%;\n}\n\n.bs__3d__viewer__wrapperClone {\n  display: grid;\n  grid-template-columns: auto;\n  height: 80%;\n}\n\n.bs__3d__viewer__canvasWrapper {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  position: relative;\n  \n}\n\ncanvas {\n  height: 70vh;\n  width: 100%;\n}\n\n.bs__3d__viewer__actionButton {\n  position: absolute;\n  right: 10px;\n  top: 10px;\n}\n\n.bs__3d__viewer__actionButton button {\n  padding: 13px 15px;\n  margin: 2px;\n  border: none;\n  border-radius: 50%;\n  cursor: pointer;\n}\n\n.bs__3d__viewer__heading h1 {\n  text-align: center;\n  font-size: 50px;\n  margin-bottom: 1rem;\n  font-family: IBM Plex Sans Thai Looped;\n}\n\n#functions {\n  display: ${controllerValue.controllerVisibility?"block":"none"};\n  padding: 0 20px;\n  width: 67%;\n}\n.bs__3d__viewer__sectionWrapper {\n  width: 95%;\n  margin: auto;\n}\n\n.bs__3d__viewer__hide {\n  display: none;\n}\n\n.bs__3d__viewer__reversedRange {\n  direction: rtl;\n}\n\n.bs__3d__viewer__config {\n  padding: 15px 0;\n  background: #f1f1f1;\n}\n\n.bs__3d__viewer__configText {\n  text-align: center;\n  font-family: IBM Plex Sans Thai Looped;\n  /* font-weight: bold; */\n  font-size: 1rem;\n}\n\n.bs__3d__viewer__font_style{\n  font-family: IBM Plex Sans Thai Looped;\n  font-weight: bold;\n}\n.bs__3d__viewer__pbg, .bs__3d__viewer__tbg{\n  font-family: IBM Plex Sans Thai Looped;\n}\n\n/* collapsable */\n\n.bs__3d__viewer__collapsible {\n  background-color: white;\n  color: #009fdb;\n  font-weight: bold;\n  border: 1px solid rgba(0, 0, 0, 0.125);\n  border-radius: 2px;\n  cursor: pointer;\n  padding: 17px;\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  text-align: left;\n  outline: none;\n  font-size: 15px;\n}\n\n.bs__3d__viewer__rotation {\n  transform: rotate(-180deg);\n}\n\ni{\n  transition: 00.5s ease;\n  color: black;\n}\nbutton img{\n  transition: 00.5s ease;\n  width: 16px;\n}\n\n.bs__3d__viewer__content {\n  padding: 0 18px;\n  max-height: 0;\n  overflow: hidden;\n  transition: max-height 0.2s ease-out;\n  background-color: #f1f1f1;\n}\n\n/* rotation section  */\n\n.bs__3d__viewer__autoRotation {\n  margin: 10px ;\n}\n\n.bs__3d__viewer__flexSpaceBetween {\n  display: flex;\n  justify-content: space-between;\n}\n\n/* checkbox design/ */\n\n.bs__3d__viewer__switch {\n  position: relative;\n  display: inline-block;\n  width: 50px;\n  height: 24px;\n}\n\n.bs__3d__viewer__switch input {\n  opacity: 0;\n  width: 0;\n  height: 0;\n}\n\n.bs__3d__viewer__slider {\n  position: absolute;\n  cursor: pointer;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: #ccc;\n  -webkit-transition: 0.4s;\n  transition: 0.4s;\n}\n\n.bs__3d__viewer__slider:before {\n  position: absolute;\n  content: "";\n  height: 15px;\n  width: 15px;\n  left: 4px;\n  bottom: 4px;\n  background-color: white;\n  -webkit-transition: 0.4s;\n  transition: 0.4s;\n}\n\ninput:checked + .bs__3d__viewer__slider {\n  background-color: #2196f3;\n}\n\ninput:focus + .bs__3d__viewer__slider {\n  box-shadow: 0 0 1px #2196f3;\n}\n\ninput:checked + .bs__3d__viewer__slider:before {\n  -webkit-transform: translateX(26px);\n  -ms-transform: translateX(26px);\n  transform: translateX(26px);\n}\n\n/* Rounded sliders */\n.bs__3d__viewer__slider.bs__3d__viewer__round {\n  border-radius: 34px;\n}\n\n.bs__3d__viewer__slider.bs__3d__viewer__round:before {\n  border-radius: 50%;\n}\n\n/* range input design  */\n\n.bs__3d__viewer__sliderRange {\n  margin: 10px;\n  -webkit-appearance: none;\n  width: 100%;\n  height: 10px;\n  border-radius: 5px;\n  background: #d3d3d3;\n  outline: none;\n  opacity: 1;\n  -webkit-transition: 0.2s;\n  transition: opacity 0.2s;\n}\n\n.bs__3d__viewer__sliderRange::-webkit-slider-thumb {\n  -webkit-appearance: none;\n  appearance: none;\n  width: 15px;\n  height: 15px;\n  border-radius: 50%;\n  background: blue;\n  cursor: pointer;\n}\n\n.bs__3d__viewer__sliderRange::-moz-range-thumb {\n  width: 25px;\n  height: 25px;\n  border-radius: 50%;\n  background: #04aa6d;\n  cursor: pointer;\n}\n\n/* background section */\n\n.bs__3d__viewer__bgInputWrapper {\n  display: flex;\n}\n.bs__3d__viewer__pbg{\n  display: ${controllerValue.bgColor&&0!==controllerValue.bgColor.length?"flex":"none"};\n}\n.bs__3d__viewer__pbg_msg{\n  padding: 25px;\n  display: ${controllerValue.bgColor&&0!==controllerValue.bgColor.length?"none":"flex"};\n}\n\n.bs__3d__viewer__radioInputDiv {\n  margin: 5px;\n}\n\n.bs__3d__viewer__radioLabel {\n  padding: 23px 23px;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\n.bs__3d__viewer__Skyblue {\n  display: ${void 0===typeof controllerValue?"skyblue":controllerValue.bgColor&&controllerValue.bgColor[0]?"inline-block":"none"};\n  background: ${controllerValue.bgColor?controllerValue.bgColor[0]:"skyblue"};\n}\n\n.bs__3d__viewer__red {\n  display: ${controllerValue.bgColor&&controllerValue.bgColor[1]?"inline-block":"none"};\n  background: ${controllerValue.bgColor?controllerValue.bgColor[1]:"skyblue"};\n}\n\n.bs__3d__viewer__gray {\n  display: ${controllerValue.bgColor&&controllerValue.bgColor[2]?"inline-block":"none"};\n  background: ${controllerValue.bgColor?controllerValue.bgColor[2]:"skyblue"};\n}\n\n.bs__3d__viewer__blue {\n  display: ${controllerValue.bgColor&&controllerValue.bgColor[3]?"inline-block":"none"};\n  background: ${controllerValue.bgColor?controllerValue.bgColor[3]:"skyblue"};\n}\n\n.bs__3d__viewer__green {\n  display: ${controllerValue.bgColor&&controllerValue.bgColor[4]?"inline-block":"none"};\n  background: ${controllerValue.bgColor?controllerValue.bgColor[4]:"skyblue"};\n}\n\n.bs__3d__viewer__yellow {\n  display: ${controllerValue.bgColor&&controllerValue.bgColor[5]?"inline-block":"none"};\n  background: ${controllerValue.bgColor?controllerValue.bgColor[5]:"skyblue"};\n}\n\n/* texture background start */\n\n.bs__3d__viewer__tbg{\n  display: ${controllerValue.bgTexture&&controllerValue.bgTexture.length>0?"flex":"none"};\n}\n.bs__3d__viewer__tbg_msg{\n  display: ${controllerValue.bgTexture&&controllerValue.bgTexture.length>0?"none":"flex"};\n  padding: 25px;\n}\n\n.bs__3d__viewer__texture1 {\n  display: ${controllerValue.bgTexture&&controllerValue.bgTexture[0]?"inline-block":"none"};\n  background: url( ${controllerValue.bgTexture&&controllerValue.bgTexture[0]?controllerValue.bgTexture[0].texture_rt:"none"});\n  background-repeat: no-repeat;\n  background-size: 50px 50px;\n  \n}\n.bs__3d__viewer__texture2 {\n  display: ${controllerValue.bgTexture&&controllerValue.bgTexture[1]?"inline-block":"none"};\n  background: url( ${controllerValue.bgTexture&&controllerValue.bgTexture[1]?controllerValue.bgTexture[1].texture_rt:"none"});\n  background-repeat: no-repeat;\n  background-size: 50px 50px;\n}\n.bs__3d__viewer__texture3 {\n  display: ${controllerValue.bgTexture&&controllerValue.bgTexture[2]?"inline-block":"none"};\n  background: url( ${controllerValue.bgTexture&&controllerValue.bgTexture[2]?controllerValue.bgTexture[2].texture_rt:"none"});\n  background-repeat: no-repeat;\n  background-size: 50px 50px;\n}\n\n/* texture background end */\n.bs__3d__viewer__btnGroup {\n  display: flex;\n  margin: 15px;\n  /*  */\n}\n.bs__3d__viewer__bgBtn {\n  background: none;\n  flex: 1 1 auto;\n  padding: 13px 0;\n  border-radius: 5px;\n  border: none;\n  cursor: pointer;\n}\n.bs__3d__viewer__bgLeftBtn,\n.bs__3d__viewer__upLeftBtn {\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n  background: #37c1dc;\n  transition: background-color 0.5s ease;\n}\n.bs__3d__viewer__bgRightBtn,\n.bs__3d__viewer__upRightBtn {\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n  background: #246ad0;\n  color: white;\n  transition: background-color 0.5s ease;\n}\n.bs__3d__viewer__bgLeftBtn:hover,\n.bs__3d__viewer__upLeftBtn:hover {\n  background: #34b1c9;\n}\n.bs__3d__viewer__bgRightBtn:hover,\n.bs__3d__viewer__upRightBtn:hover {\n  background: #215eb8;\n}\n\n#plainBackground {\n  width: 100%;\n}\n#TextureBackground {\n  width: 100%;\n}\n\ninput {\n  width: 100%;\n}\n\n/* file upload */\n\n#fileInput,\n#urlInput {\n  padding: 8px;\n  border: 1px solid #ccc;\n}\n\n.bs__3d__viewer__btn {\n  width: 100%;\n  padding: 10px;\n  border: none;\n  margin: 10px 0;\n  background: #157347;\n  color: white;\n  border-radius: 5px;\n  transition: background-color 0.5s ease;\n}\n.bs__3d__viewer__btn:hover {\n  background: rgb(9, 77, 45);\n}\n\n/* container */\n\n@media only screen and (max-width: 1000px) {\n  .bs__3d__viewer__container {\n      width: 97%;\n  }\n}\n@media only screen and (max-width: 750px) {\n  .bs__3d__viewer__wrapper {\n      display: block;\n  }\n  #functions {\n      \n      padding: 20px 0;\n      width: auto;\n  }\n  .bs__3d__viewer__container {\n      width: 80%;\n  }\n}\n`,styleSheet=document.createElement("style");styleSheet.type="text/css",styleSheet.innerText=styles,document.head.appendChild(styleSheet);import*as THREE from"https://cdn.jsdelivr.net/gh/Siam456/FT_Filees@main/files/three.module.js";import{OrbitControls}from"https://cdn.jsdelivr.net/gh/Siam456/FT_Filees@main/files/OrbitControls.js";import{GLTFLoader,OBJLoader,FBXLoader}from"https://cdn.jsdelivr.net/gh/Siam456/FT_Filees@main/files/Loader.js";import{DRACOLoader}from"https://cdn.jsdelivr.net/gh/mrdoob/three.js@dev/examples/jsm/loaders/DRACOLoader.js";let camera,scene,renderer,obj="",mixer,controls,rotation=controllerValue.rotationSpeedDefaultValue||0,maxAngleForOrbit=controllerValue.maxAngleForOrbit||3.4,minAngleForOrbit=controllerValue.minAngleForOrbit||0,zoomMax=controllerValue.zoomMax||25,zoomMin=controllerValue.zoomMin||25;const clock=new THREE.Clock;function init(){var canvReference=document.getElementById("myCanvasElement");scene=new THREE.Scene,scene.background=new THREE.Color(controllerValue.defaultbg?controllerValue.defaultbg:null),controllerValue.defaultbg||alert("defaultbg in mainControllerValue is required to show default background color."),controllerValue.rotation||alert("rotation in mainControllerValue is required for auto rotation."),controllerValue.zoom||alert("zoom in mainControllerValue is required to zoom model."),renderer=new THREE.WebGLRenderer({antialias:!0,canvas:canvReference,preserveDrawingBuffer:!0}),renderer.setPixelRatio(window.devicePixelRatio);const canvas=renderer.domElement,width=canvas.clientWidth,height=canvas.clientHeight;camera=new THREE.PerspectiveCamera(45,window.innerWidth/window.innerHeight,1,1e3),camera.lookAt(scene.position),camera.position.set(0,0,25),canvas.width===width&&canvas.height===height||(renderer.setSize(width,height,!1),camera.aspect=width/height,camera.updateProjectionMatrix());let light=new THREE.HemisphereLight(16777147,526368,.8);scene.add(light);let DirectionalLightbt=new THREE.DirectionalLight(16777215,.7);DirectionalLightbt.position.set(3,-8,1.5),scene.add(DirectionalLightbt);let DirectionalLightside=new THREE.DirectionalLight(16777215,.5);DirectionalLightside.position.set(7,8,0),scene.add(DirectionalLightside);let DirectionalLightside2=new THREE.DirectionalLight(16777215,.5);DirectionalLightside2.position.set(-7,8,0),scene.add(DirectionalLightside2);let file=null,x;const FBXloader=new FBXLoader,GLTFloader=new GLTFLoader,OBJloader=new OBJLoader;if(controllerValue.assetLink){let fileName=controllerValue.assetLink.split("."),fileExt=fileName[fileName.length-1];if("fbx"===fileExt)scene.remove(obj),FBXloader.load(controllerValue.assetLink,(function(fbx){obj=fbx;var bbox=(new THREE.Box3).setFromObject(obj),size=bbox.getSize(new THREE.Vector3),maxAxis=Math.max(size.x,size.y,size.z);isNaN(maxAxis)?obj.scale.set(.02,.02,.02):obj.scale.multiplyScalar(10/maxAxis);const offset=new THREE.Vector3;if(bbox.getCenter(offset).negate(),obj.children.forEach(element=>{element.children.length===obj.children.length&&element.position.set(offset.x,offset.y,offset.z)}),obj.animations.length){mixer=new THREE.AnimationMixer(obj);const action=mixer.clipAction(obj.animations[0]);action.play(),obj.castShadow=!0}scene.add(obj)}));else if("glb"===fileExt||"gltf"===fileExt){scene.remove(obj);const dracoLoader=new DRACOLoader;dracoLoader.setDecoderConfig({type:"js"}),dracoLoader.setDecoderPath("https://raw.githubusercontent.com/mrdoob/three.js/dev/examples/js/libs/draco/"),GLTFloader.setDRACOLoader(dracoLoader),GLTFloader.load(controllerValue.assetLink,(function(gltf){obj=gltf.scene;var bbox=(new THREE.Box3).setFromObject(obj),size=bbox.getSize(new THREE.Vector3),maxAxis=Math.max(size.x,size.y,size.z);isNaN(maxAxis)?obj.scale.set(.02,.02,.02):obj.scale.multiplyScalar(10/maxAxis);const offset=new THREE.Vector3;bbox.getCenter(offset).negate(),obj.children.forEach(element=>{element.children.length===obj.children.length&&element.position.set(offset.x,offset.y,offset.z)}),gltf.animations.length&&(mixer=new THREE.AnimationMixer(gltf.scene),mixer.clipAction(gltf.animations[0]).play()),scene.add(obj)}))}else"obj"===fileExt&&(scene.remove(obj),OBJloader.load(controllerValue.assetLink,(function(objNew){obj=objNew;var bbox=(new THREE.Box3).setFromObject(obj),size=bbox.getSize(new THREE.Vector3),maxAxis=Math.max(size.x,size.y,size.z);isNaN(maxAxis)?obj.scale.set(.02,.02,.02):obj.scale.multiplyScalar(10/maxAxis);const offset=new THREE.Vector3;if(bbox.getCenter(offset).negate(),obj.children.forEach(element=>{element.children.length===obj.children.length&&element.position.set(offset.x,offset.y,offset.z)}),obj.animations.length){mixer=new THREE.AnimationMixer(obj);const action=mixer.clipAction(obj.animations[0]);action.play(),obj.castShadow=!0}scene.add(obj)})))}else alert("No 3d model link Found");const inputElement=document.getElementById("fileInput");function handleFiles(){const fileList=this.files;file=fileList[0]}let link;inputElement.addEventListener("change",handleFiles,!1),document.getElementById("fileUploadBtn").addEventListener("click",()=>{x=URL.createObjectURL(file);let fileName=file.name.split("."),fileExt=fileName[fileName.length-1];if("fbx"===fileExt)scene.remove(obj),FBXloader.load(x,(function(fbx){obj=fbx;var bbox=(new THREE.Box3).setFromObject(obj),size=bbox.getSize(new THREE.Vector3),maxAxis=Math.max(size.x,size.y,size.z);let y=.5;isNaN(maxAxis)?(obj.scale.set(.02,.02,.02),y=.1):obj.scale.multiplyScalar(10/maxAxis);const offset=new THREE.Vector3;bbox.getCenter(offset).negate();for(let element of obj.children){if(element.children.length===obj.children.length){element.position.set(offset.x,offset.y,offset.z);break}obj.position.y-=y}if(obj.animations.length){mixer=new THREE.AnimationMixer(obj);for(let i=0;i<obj.animations.length;i++)mixer.clipAction(obj.animations[0]).play();obj.castShadow=!0}scene.add(obj)}));else if("glb"===fileExt||"gltf"===fileExt){const dracoLoader=new DRACOLoader;dracoLoader.setDecoderConfig({type:"js"}),dracoLoader.setDecoderPath("https://raw.githubusercontent.com/mrdoob/three.js/dev/examples/js/libs/draco/"),GLTFloader.setDRACOLoader(dracoLoader),scene.remove(obj),GLTFloader.load(x,(function(gltf){obj=gltf.scene;var bbox=(new THREE.Box3).setFromObject(obj),size=bbox.getSize(new THREE.Vector3),maxAxis=Math.max(size.x,size.y,size.z);isNaN(maxAxis)?obj.scale.set(.02,.02,.02):obj.scale.multiplyScalar(10/maxAxis);const offset=new THREE.Vector3;bbox.getCenter(offset).negate(),obj.children.forEach(element=>{element.children.length===obj.children.length&&element.position.set(offset.x,offset.y,offset.z)}),gltf.animations.length&&(mixer=new THREE.AnimationMixer(gltf.scene),mixer.clipAction(gltf.animations[0]).play()),scene.add(obj)}))}else"obj"===fileExt&&(scene.remove(obj),OBJloader.load(x,(function(objNew){obj=objNew;var bbox=(new THREE.Box3).setFromObject(obj),size=bbox.getSize(new THREE.Vector3),maxAxis=Math.max(size.x,size.y,size.z);isNaN(maxAxis)?obj.scale.set(.02,.02,.02):obj.scale.multiplyScalar(10/maxAxis);const offset=new THREE.Vector3;if(bbox.getCenter(offset).negate(),obj.children.forEach(element=>{element.children.length===obj.children.length&&element.position.set(offset.x,offset.y,offset.z)}),obj.animations.length){mixer=new THREE.AnimationMixer(obj);const action=mixer.clipAction(obj.animations[0]);action.play(),obj.castShadow=!0}scene.add(obj)})))});const urlinputElement=document.getElementById("urlInput");function urlhandleFiles(){link=this.value}urlinputElement.addEventListener("change",urlhandleFiles,!1),document.getElementById("urlUploadBtn").addEventListener("click",()=>{x=link;let fileName=link.split("."),fileExt=fileName[fileName.length-1];if("fbx"===fileExt)scene.remove(obj),FBXloader.load(x,(function(fbx){obj=fbx;var bbox=(new THREE.Box3).setFromObject(obj),size=bbox.getSize(new THREE.Vector3),maxAxis=Math.max(size.x,size.y,size.z);isNaN(maxAxis)?obj.scale.set(.02,.02,.02):obj.scale.multiplyScalar(10/maxAxis);const offset=new THREE.Vector3;if(bbox.getCenter(offset).negate(),obj.children.forEach(element=>{element.children.length===obj.children.length&&element.position.set(offset.x,offset.y,offset.z)}),obj.animations.length){mixer=new THREE.AnimationMixer(obj);const action=mixer.clipAction(obj.animations[0]);action.play(),obj.castShadow=!0}scene.add(obj)}));else if("glb"===fileExt||"gltf"===fileExt){scene.remove(obj);const dracoLoader=new DRACOLoader;dracoLoader.setDecoderConfig({type:"js"}),dracoLoader.setDecoderPath("https://raw.githubusercontent.com/mrdoob/three.js/dev/examples/js/libs/draco/"),GLTFloader.setDRACOLoader(dracoLoader),GLTFloader.load(x,(function(gltf){obj=gltf.scene;var bbox=(new THREE.Box3).setFromObject(obj),size=bbox.getSize(new THREE.Vector3),maxAxis=Math.max(size.x,size.y,size.z);isNaN(maxAxis)?obj.scale.set(.02,.02,.02):obj.scale.multiplyScalar(10/maxAxis);const offset=new THREE.Vector3;bbox.getCenter(offset).negate(),obj.children.forEach(element=>{element.children.length===obj.children.length&&element.position.set(offset.x,offset.y,offset.z)}),gltf.animations.length&&(mixer=new THREE.AnimationMixer(gltf.scene),mixer.clipAction(gltf.animations[0]).play()),scene.add(obj)}))}else"obj"===fileExt&&(scene.remove(obj),OBJloader.load(x,(function(objNew){obj=objNew;var bbox=(new THREE.Box3).setFromObject(obj),size=bbox.getSize(new THREE.Vector3),maxAxis=Math.max(size.x,size.y,size.z);isNaN(maxAxis)?obj.scale.set(.02,.02,.02):obj.scale.multiplyScalar(10/maxAxis);const offset=new THREE.Vector3;if(bbox.getCenter(offset).negate(),obj.children.forEach(element=>{element.children.length===obj.children.length&&element.position.set(offset.x,offset.y,offset.z)}),obj.animations.length){mixer=new THREE.AnimationMixer(obj);const action=mixer.clipAction(obj.animations[0]);action.play(),obj.castShadow=!0}scene.add(obj)})))}),controls=new OrbitControls(camera,renderer.domElement),controls.target.set(0,0,0),controls.autoRotate=controllerValue.rotation,controls.enableZoom=controllerValue.zoom,controls.screenSpacePanning=!1,controls.update(),renderer.setAnimationLoop(render),window.addEventListener("resize",onWindowResize)}function onWindowResize(){const canvas=renderer.domElement,width=canvas.clientWidth,height=canvas.clientHeight;camera.aspect=width/height,camera.updateProjectionMatrix(),renderer.setSize(width,height,!1),render()}function render(){controls.autoRotateSpeed!==rotation&&(controls.autoRotateSpeed=rotation),controls.minDistance!==zoomMin&&(controls.minDistance=zoomMin),controls.maxDistance!==zoomMax&&(controls.maxDistance=zoomMax),controls.minPolarAngle!==minAngleForOrbit&&(controls.minPolarAngle=minAngleForOrbit),controls.maxPolarAngle!==maxAngleForOrbit&&(controls.maxPolarAngle=maxAngleForOrbit),mixer&&mixer.update(clock.getDelta()),controls.update(),renderer.render(scene,camera)}init(),render();var checkBox=document.getElementById("autoRotationBtn");checkBox.addEventListener("click",()=>{rotation=!0===checkBox.checked?document.getElementById("myRange").value:0});var RotationSpeed=document.getElementById("myRange");RotationSpeed.oninput=function(){checkBox.checked=!0,rotation=this.value};var RotationTopLimite=document.getElementById("myRangeTopLimite");RotationTopLimite.oninput=function(){maxAngleForOrbit=this.value};var RotationBottomLimite=document.getElementById("myRangeBottomLimite");RotationBottomLimite.oninput=function(){minAngleForOrbit=this.value};let inX=document.getElementById("ZoomLimiteIn").value,outX=document.getElementById("ZoomLimiteOut").value;var ZoomLimiteIn=document.getElementById("ZoomLimiteIn");ZoomLimiteIn.oninput=function(){checkBoxZoom.checked=!0,zoomMin=this.value,inX=this.value};var ZoomLimiteOut=document.getElementById("ZoomLimiteOut");ZoomLimiteOut.oninput=function(){checkBoxZoom.checked=!0,zoomMax=this.value,outX=this.value};var checkBoxZoom=document.getElementById("ZoomBtn");checkBoxZoom.addEventListener("click",()=>{!0!==checkBoxZoom.checked?(zoomMin=25,zoomMax=25):(zoomMin=inX,zoomMax=outX)});let bgLeftBtn=document.querySelector(".bs__3d__viewer__bgLeftBtn"),bgRightBtn=document.querySelector(".bs__3d__viewer__bgRightBtn");bgLeftBtn.addEventListener("click",()=>{document.getElementById("plainBackground").classList.remove("hide"),document.getElementById("TextureBackground").classList.add("hide")}),bgRightBtn.addEventListener("click",()=>{document.getElementById("plainBackground").classList.add("hide"),document.getElementById("TextureBackground").classList.remove("hide")});let skybox=null;document.getElementsByName("bg").forEach(radio=>{radio.addEventListener("click",()=>{if("skyblue"===radio.value)null!==skybox&&scene.remove(skybox),scene.background=new THREE.Color(controllerValue.bgColor[0]);else if("red"===radio.value)null!==skybox&&scene.remove(skybox),scene.background=new THREE.Color(controllerValue.bgColor[1]);else if("gray"===radio.value)null!==skybox&&scene.remove(skybox),scene.background=new THREE.Color(controllerValue.bgColor[2]);else if("blue"===radio.value)null!==skybox&&scene.remove(skybox),scene.background=new THREE.Color(controllerValue.bgColor[3]);else if("green"===radio.value)null!==skybox&&scene.remove(skybox),scene.background=new THREE.Color(controllerValue.bgColor[4]);else if("yellow"===radio.value)null!==skybox&&scene.remove(skybox),scene.background=new THREE.Color(controllerValue.bgColor[5]);else if("texture1"===radio.value){null!==skybox&&scene.remove(skybox);let materialArray=[],texture_ft=(new THREE.TextureLoader).load(controllerValue.bgTexture[0].texture_ft),texture_bk=(new THREE.TextureLoader).load(controllerValue.bgTexture[0].texture_bk),texture_up=(new THREE.TextureLoader).load(controllerValue.bgTexture[0].texture_up),texture_dn=(new THREE.TextureLoader).load(controllerValue.bgTexture[0].texture_dn),texture_rt=(new THREE.TextureLoader).load(controllerValue.bgTexture[0].texture_rt),texture_lf=(new THREE.TextureLoader).load(controllerValue.bgTexture[0].texture_lf);materialArray.push(new THREE.MeshBasicMaterial({map:texture_ft})),materialArray.push(new THREE.MeshBasicMaterial({map:texture_bk})),materialArray.push(new THREE.MeshBasicMaterial({map:texture_up})),materialArray.push(new THREE.MeshBasicMaterial({map:texture_dn})),materialArray.push(new THREE.MeshBasicMaterial({map:texture_rt})),materialArray.push(new THREE.MeshBasicMaterial({map:texture_lf}));for(let i=0;i<6;i++)materialArray[i].side=THREE.BackSide;let skyboxGeo=new THREE.BoxGeometry(100,100,100);skybox=new THREE.Mesh(skyboxGeo,materialArray),scene.add(skybox)}else if("texture2"===radio.value){null!==skybox&&scene.remove(skybox);let materialArray=[],texture_ft=(new THREE.TextureLoader).load(controllerValue.bgTexture[1].texture_ft),texture_bk=(new THREE.TextureLoader).load(controllerValue.bgTexture[1].texture_bk),texture_up=(new THREE.TextureLoader).load(controllerValue.bgTexture[1].texture_up),texture_dn=(new THREE.TextureLoader).load(controllerValue.bgTexture[1].texture_dn),texture_rt=(new THREE.TextureLoader).load(controllerValue.bgTexture[1].texture_rt),texture_lf=(new THREE.TextureLoader).load(controllerValue.bgTexture[1].texture_lf);materialArray.push(new THREE.MeshBasicMaterial({map:texture_ft})),materialArray.push(new THREE.MeshBasicMaterial({map:texture_bk})),materialArray.push(new THREE.MeshBasicMaterial({map:texture_up})),materialArray.push(new THREE.MeshBasicMaterial({map:texture_dn})),materialArray.push(new THREE.MeshBasicMaterial({map:texture_rt})),materialArray.push(new THREE.MeshBasicMaterial({map:texture_lf}));for(let i=0;i<6;i++)materialArray[i].side=THREE.BackSide;let skyboxGeo=new THREE.BoxGeometry(100,100,100);skybox=new THREE.Mesh(skyboxGeo,materialArray),scene.add(skybox)}else if("texture3"===radio.value){null!==skybox&&scene.remove(skybox);let materialArray=[],texture_ft=(new THREE.TextureLoader).load(controllerValue.bgTexture[2].texture_ft),texture_bk=(new THREE.TextureLoader).load(controllerValue.bgTexture[2].texture_bk),texture_up=(new THREE.TextureLoader).load(controllerValue.bgTexture[2].texture_up),texture_dn=(new THREE.TextureLoader).load(controllerValue.bgTexture[2].texture_dn),texture_rt=(new THREE.TextureLoader).load(controllerValue.bgTexture[2].texture_rt),texture_lf=(new THREE.TextureLoader).load(controllerValue.bgTexture[2].texture_lf);materialArray.push(new THREE.MeshBasicMaterial({map:texture_ft})),materialArray.push(new THREE.MeshBasicMaterial({map:texture_bk})),materialArray.push(new THREE.MeshBasicMaterial({map:texture_up})),materialArray.push(new THREE.MeshBasicMaterial({map:texture_dn})),materialArray.push(new THREE.MeshBasicMaterial({map:texture_rt})),materialArray.push(new THREE.MeshBasicMaterial({map:texture_lf}));for(let i=0;i<6;i++)materialArray[i].side=THREE.BackSide;let skyboxGeo=new THREE.BoxGeometry(100,100,100);skybox=new THREE.Mesh(skyboxGeo,materialArray),scene.add(skybox)}})});let upLeftBtn=document.querySelector(".bs__3d__viewer__upLeftBtn"),upRightBtn=document.querySelector(".bs__3d__viewer__upRightBtn");upLeftBtn.addEventListener("click",()=>{document.getElementById("uploadFile").classList.remove("hide"),document.getElementById("urlFile").classList.add("hide")}),upRightBtn.addEventListener("click",()=>{document.getElementById("uploadFile").classList.add("hide"),document.getElementById("urlFile").classList.remove("hide")});var colBtn1=document.getElementById("col1"),colBtn2=document.getElementById("col2"),colBtn3=document.getElementById("col3"),colBtn4=document.getElementById("col4");let icon1=document.getElementById("icon1"),icon2=document.getElementById("icon2"),icon3=document.getElementById("icon3"),icon4=document.getElementById("icon4");colBtn1.addEventListener("click",(function(){var content1=this.nextElementSibling,content2=colBtn2.nextElementSibling,content3=colBtn3.nextElementSibling,content4=colBtn4.nextElementSibling;content1.style.maxHeight?(content1.style.maxHeight=null,icon1.classList.remove("rotation")):(content1.style.maxHeight=content1.scrollHeight+"px",content2.style.maxHeight=null,content3.style.maxHeight=null,content4.style.maxHeight=null,icon1.classList.add("rotation"),icon2.classList.remove("rotation"),icon3.classList.remove("rotation"),icon4.classList.remove("rotation"))})),colBtn2.addEventListener("click",(function(){var content1=this.nextElementSibling,content2=colBtn1.nextElementSibling,content3=colBtn3.nextElementSibling,content4=colBtn4.nextElementSibling;content1.style.maxHeight?(content1.style.maxHeight=null,icon2.classList.remove("rotation")):(content1.style.maxHeight=content1.scrollHeight+"px",content2.style.maxHeight=null,content3.style.maxHeight=null,content4.style.maxHeight=null,icon1.classList.remove("rotation"),icon2.classList.add("rotation"),icon3.classList.remove("rotation"),icon4.classList.remove("rotation"))})),colBtn3.addEventListener("click",(function(){var content1=this.nextElementSibling,content2=colBtn2.nextElementSibling,content3=colBtn1.nextElementSibling,content4=colBtn4.nextElementSibling;content1.style.maxHeight?(content1.style.maxHeight=null,icon3.classList.remove("rotation")):(content1.style.maxHeight=content1.scrollHeight+"px",content2.style.maxHeight=null,content3.style.maxHeight=null,content4.style.maxHeight=null,icon1.classList.remove("rotation"),icon2.classList.remove("rotation"),icon3.classList.add("rotation"),icon4.classList.remove("rotation"))})),colBtn4.addEventListener("click",(function(){var content1=this.nextElementSibling,content2=colBtn2.nextElementSibling,content3=colBtn3.nextElementSibling,content4=colBtn1.nextElementSibling;content1.style.maxHeight?(content1.style.maxHeight=null,icon4.classList.remove("rotation")):(content1.style.maxHeight=content1.scrollHeight+"px",content2.style.maxHeight=null,content3.style.maxHeight=null,content4.style.maxHeight=null,icon1.classList.remove("rotation"),icon2.classList.remove("rotation"),icon3.classList.remove("rotation"),icon4.classList.add("rotation"))}));let fullScreen=document.getElementById("fullscreen"),snapShot=document.getElementById("snapshot"),check=!0;fullScreen.addEventListener("click",()=>{if(check)document.querySelector("#functions").style.display="none",document.querySelector(".bs__3d__viewer__heading").classList.add("hide"),document.querySelector(".bs__3d__viewer__container").style.width="100%",document.getElementById("myCanvasElement").style.height="100vh",renderer.setSize(window.innerWidth,window.innerHeight,!1),camera.aspect=window.innerWidth/window.innerHeight,camera.updateProjectionMatrix(),check=!1;else{controllerValue.controllerVisibility&&(document.querySelector("#functions").style.display="block"),document.querySelector(".bs__3d__viewer__heading").classList.remove("hide"),document.querySelector(".bs__3d__viewer__container").style.width="80%",document.getElementById("myCanvasElement").style.height="70vh";const canvas=renderer.domElement,width=canvas.clientWidth,height=canvas.clientHeight;renderer.setSize(width,height,!1),camera.aspect=width/height,camera.updateProjectionMatrix(),check=!0}}),snapShot.addEventListener("click",()=>{var canvas,url=document.getElementById("myCanvasElement").toDataURL(),link=document.createElement("a");link.setAttribute("href",url),link.setAttribute("target","_blank"),link.setAttribute("download","canvas.png"),link.click()});